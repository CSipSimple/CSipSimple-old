$(AOF) is path to Android for Freerunner sources
$(NDK) is path to NDK android-ndk-r4b
$(SDK) is path to Android SDK 
$(PDK) is path to pdk (see below)

- build pdk, see ($NDK)/development/pdk/README
- unpack (AOF)/dist/android_pndk-freerunner-eng.user.yyyymmdd.hhmmss.tar.gz to $(PDK)
- add line
  TARGET_ARCH_for_armeabi-v4t := armv4t
  to file ($NDK)/build/core/setup-abi.mk
- copy ($AOF)/prebuilt/linux-x86/toolchain/armv4t-android-eabi-4.2.1 directory to $(NDK)/build/prebuilt
- create new directory $(NDK)/build/platforms/android-3/arch-armv4t/usr
- copy ($PDK)/lib directory to $(NDK)/build/platforms/android-3/arch-armv4t/usr
  or
  copy ($AOF)/out/target/product/freerunner/system/lib directory to $(NDK)/build/platforms/android-3/arch-armv4t/usr
- copy ($PDK)/include directory to $(NDK)/build/platforms/android-3/arch-armv4t/usr
- in $(NDK) directory unpack armv4t-eabi-4_2_1.tar.gz
- replace line
  final String sharedLibraryABI = "armeabi";
  with
  final String sharedLibraryABI = "armeabi-v4t";
  in file ($AOF)/frameworks/base/services/java/com/android/server/PackageManagerService.java
  
- update AoF build
- in jni projects in jni/ directory create Application.mk with contents:
  APP_PLATFORM := android-3
  APP_ABI      := armeabi-v4t

On the freerunner one can replace /system/framework/services.jar by remounting /system read-write with:
mount -o remount /dev/block/mtdblock6 /system
and then on a Linux terminal:
$(SDK)/tools/adb push $(AOF)/out/target/product/freerunner/system/framework/services.jar /system/framework/services.jar

