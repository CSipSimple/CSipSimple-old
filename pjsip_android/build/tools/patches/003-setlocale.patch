diff --git a/gcc/gcc-4.2.1/intl/localename.c b/gcc/gcc-4.2.1/intl/localename.c
index 28c4ca7..bf0662c 100644
--- a/gcc/gcc-4.2.1/intl/localename.c
+++ b/gcc/gcc-4.2.1/intl/localename.c
@@ -393,6 +393,8 @@ _nl_locale_name (category, categoryname)
      On some systems this can be done by the 'setlocale' function itself.  */
 # if defined HAVE_SETLOCALE && defined HAVE_LC_MESSAGES && defined HAVE_LOCALE_NULL
   retval = setlocale (category, NULL);
+  if (retval == NULL || retval[0] == '\0')
+    retval = "C";
 # else
   /* Setting of LC_ALL overwrites all other.  */
   retval = getenv ("LC_ALL");
diff --git a/gcc/gcc-4.2.1/libstdc++-v3/config/locale/generic/c_locale.h b/gcc/gcc-4.2.1/libstdc++-v3/config/locale/generic/c_locale.h
index d180c20..e5484c7 100644
--- a/gcc/gcc-4.2.1/libstdc++-v3/config/locale/generic/c_locale.h
+++ b/gcc/gcc-4.2.1/libstdc++-v3/config/locale/generic/c_locale.h
@@ -65,6 +65,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
 		   const char* __fmt, ...)
   {
     char* __old = std::setlocale(LC_NUMERIC, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     char* __sav = NULL;
     if (std::strcmp(__old, "C"))
       {
diff --git a/gcc/gcc-4.2.1/libstdc++-v3/config/locale/gnu/c_locale.h b/gcc/gcc-4.2.1/libstdc++-v3/config/locale/gnu/c_locale.h
index f0b2b7d..98be1c7 100644
--- a/gcc/gcc-4.2.1/libstdc++-v3/config/locale/gnu/c_locale.h
+++ b/gcc/gcc-4.2.1/libstdc++-v3/config/locale/gnu/c_locale.h
@@ -82,6 +82,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
     __c_locale __old = __gnu_cxx::__uselocale(__cloc);
 #else
     char* __old = std::setlocale(LC_ALL, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     char* __sav = new char[std::strlen(__old) + 1];
     std::strcpy(__sav, __old);
     std::setlocale(LC_ALL, "C");
diff --git a/gcc/gcc-4.4.0/intl/localename.c b/gcc/gcc-4.4.0/intl/localename.c
index 28c4ca7..bf0662c 100644
--- a/gcc/gcc-4.4.0/intl/localename.c
+++ b/gcc/gcc-4.4.0/intl/localename.c
@@ -393,6 +393,8 @@ _nl_locale_name (category, categoryname)
      On some systems this can be done by the 'setlocale' function itself.  */
 # if defined HAVE_SETLOCALE && defined HAVE_LC_MESSAGES && defined HAVE_LOCALE_NULL
   retval = setlocale (category, NULL);
+  if (retval == NULL || retval[0] == '\0')
+    retval = "C";
 # else
   /* Setting of LC_ALL overwrites all other.  */
   retval = getenv ("LC_ALL");
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/c_locale.cc b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/c_locale.cc
index 3b9f1bd..0ae5a04 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/c_locale.cc
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/c_locale.cc
@@ -51,6 +51,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
     {
       // Assumes __s formatted for "C" locale.
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old[0] == '\0')
+        __old = "C";
       const size_t __len = strlen(__old) + 1;
       char* __sav = new char[__len];
       memcpy(__sav, __old, __len);
@@ -116,6 +118,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
     {
       // Assumes __s formatted for "C" locale.
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old[0] == '\0')
+        __old = "C";
       const size_t __len = strlen(__old) + 1;
       char* __sav = new char[__len];
       memcpy(__sav, __old, __len);
@@ -161,6 +165,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
     {
       // Assumes __s formatted for "C" locale.
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old[0] == '\0')
+        __old = "C";
       const size_t __len = strlen(__old) + 1;
       char* __sav = new char[__len];
       memcpy(__sav, __old, __len);
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/c_locale.h b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/c_locale.h
index 472ef55..c28cb97 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/c_locale.h
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/c_locale.h
@@ -58,6 +58,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
 		   const char* __fmt, ...)
   {
     char* __old = std::setlocale(LC_NUMERIC, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     char* __sav = NULL;
     if (__builtin_strcmp(__old, "C"))
       {
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/time_members.cc b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/time_members.cc
index 86c9249..5b51595 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/time_members.cc
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/generic/time_members.cc
@@ -43,6 +43,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
 	   const tm* __tm) const
     {
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old[0] == '\0')
+        __old = "C";
       const size_t __llen = strlen(__old) + 1;
       char* __sav = new char[__llen];
       memcpy(__sav, __old, __llen);
@@ -128,6 +130,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
 	   const tm* __tm) const
     {
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old[0] == '\0')
+        __old = "C";
       const size_t __llen = strlen(__old) + 1;
       char* __sav = new char[__llen];
       memcpy(__sav, __old, __llen);
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/c_locale.h b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/c_locale.h
index 749a97a..8157312 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/c_locale.h
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/c_locale.h
@@ -72,6 +72,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
     __c_locale __old = __gnu_cxx::__uselocale(__cloc);
 #else
     char* __old = std::setlocale(LC_NUMERIC, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     char* __sav = NULL;
     if (__builtin_strcmp(__old, "C"))
       {
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/messages_members.cc b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/messages_members.cc
index 1a42b38..e5f4d72 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/messages_members.cc
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/messages_members.cc
@@ -45,6 +45,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
       return string(__msg);
 #else
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old[0] == '\0')
+        __old = "C";
       const size_t __len = strlen(__old) + 1;
       char* __sav = new char[__len];
       memcpy(__sav, __old, __len);
@@ -68,6 +70,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
       return _M_convert_from_char(__msg);
 # else
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old[0] == '\0')
+        __old = "C";
       const size_t __len = strlen(__old) + 1;
       char* __sav = new char[__len];
       memcpy(__sav, __old, __len);
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/monetary_members.cc b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/monetary_members.cc
index c5ec857..7b994bb 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/monetary_members.cc
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/monetary_members.cc
@@ -428,6 +428,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
 #else
 	  // Switch to named locale so that mbsrtowcs will work.
 	  char* __old = setlocale(LC_ALL, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
           const size_t __llen = strlen(__old) + 1;
           char* __sav = new char[__llen];
           memcpy(__sav, __old, __llen);
@@ -596,6 +598,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
 #else
 	  // Switch to named locale so that mbsrtowcs will work.
 	  char* __old = setlocale(LC_ALL, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
           const size_t __llen = strlen(__old) + 1;
           char* __sav = new char[__llen];
           memcpy(__sav, __old, __llen);
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/time_members.cc b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/time_members.cc
index f80932c..4f79822 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/time_members.cc
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/locale/gnu/time_members.cc
@@ -46,6 +46,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
 					_M_c_locale_timepunct);
 #else
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old == '\0')
+        __old = "C";
       const size_t __llen = strlen(__old) + 1;  
       char* __sav = new char[__llen];
       memcpy(__sav, __old, __llen);
@@ -202,6 +204,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)
 					_M_c_locale_timepunct);
 #else
       char* __old = setlocale(LC_ALL, NULL);
+      if (__old == NULL || __old[0] == '\0')
+        __old = "C";
       const size_t __llen = strlen(__old) + 1;
       char* __sav = new char[__llen];
       memcpy(__sav, __old, __llen);
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/os/gnu-linux/ctype_noninline.h b/gcc/gcc-4.4.0/libstdc++-v3/config/os/gnu-linux/ctype_noninline.h
index 4fc47a9..68e4130 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/os/gnu-linux/ctype_noninline.h
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/os/gnu-linux/ctype_noninline.h
@@ -45,6 +45,8 @@
   {
     const ctype_base::mask* __ret;
     char* __old = setlocale(LC_CTYPE, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     char* __sav = NULL;
     if (__builtin_strcmp(__old, "C"))
       {
@@ -87,6 +89,8 @@
   _M_del(__table != 0 && __del), _M_widen_ok(0), _M_narrow_ok(0)
   {
     char* __old = setlocale(LC_CTYPE, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     char* __sav = NULL;
     if (__builtin_strcmp(__old, "C"))
       {    
@@ -132,6 +136,8 @@
   _M_del(__table != 0 && __del), _M_widen_ok(0), _M_narrow_ok(0)
   {
     char* __old = setlocale(LC_CTYPE, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     char* __sav = NULL;
     if (__builtin_strcmp(__old, "C"))
       {
diff --git a/gcc/gcc-4.4.0/libstdc++-v3/config/os/tpf/ctype_noninline.h b/gcc/gcc-4.4.0/libstdc++-v3/config/os/tpf/ctype_noninline.h
index 64917c4..6be8670 100644
--- a/gcc/gcc-4.4.0/libstdc++-v3/config/os/tpf/ctype_noninline.h
+++ b/gcc/gcc-4.4.0/libstdc++-v3/config/os/tpf/ctype_noninline.h
@@ -38,6 +38,8 @@
   {
     const ctype_base::mask* __ret;
     char* __old = setlocale(LC_CTYPE, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     const size_t __len = __builtin_strlen(__old) + 1;
     char* __sav = new char[__len];
     __builtin_memcpy(__sav, __old, __len);
@@ -53,6 +55,8 @@
   : facet(__refs), _M_del(__table != 0 && __del)
   {
     char* __old = setlocale(LC_CTYPE, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     const size_t __len = __builtin_strlen(__old) + 1;
     char* __sav = new char[__len];
     __builtin_memcpy(__sav, __old, __len);
@@ -69,6 +73,8 @@
   : facet(__refs), _M_del(__table != 0 && __del)
   {
     char* __old = setlocale(LC_CTYPE, NULL);
+    if (__old == NULL || __old[0] == '\0')
+      __old = "C";
     const size_t __len = __builtin_strlen(__old) + 1;
     char* __sav = new char[__len];
     __builtin_memcpy(__sav, __old, __len);
